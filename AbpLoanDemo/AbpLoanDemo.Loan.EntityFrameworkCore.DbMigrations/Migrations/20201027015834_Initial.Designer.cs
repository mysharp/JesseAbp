// <auto-generated />
using System;
using AbpLoanDemo.Loan.EntityFrameworkCore.DbMigrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

namespace AbpLoanDemo.Loan.EntityFrameworkCore.DbMigrations.Migrations
{
    [DbContext(typeof(LoanDbMigrationContext))]
    [Migration("20201027015834_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbpLoanDemo.Loan.Domain.Entities.Applier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LoanRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LoanRequestId");

                    b.ToTable("Applier");
                });

            modelBuilder.Entity("AbpLoanDemo.Loan.Domain.Entities.Guarantee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Guarantee");
                });

            modelBuilder.Entity("AbpLoanDemo.Loan.Domain.Entities.LoanRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("ConcurrencyStamp")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("ExtraProperties")
                        .HasColumnName("ExtraProperties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GuaranteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuaranteeId");

                    b.ToTable("LoanRequest");
                });

            modelBuilder.Entity("AbpLoanDemo.Loan.Domain.Entities.Applier", b =>
                {
                    b.HasOne("AbpLoanDemo.Loan.Domain.Entities.LoanRequest", null)
                        .WithMany("Partners")
                        .HasForeignKey("LoanRequestId");
                });

            modelBuilder.Entity("AbpLoanDemo.Loan.Domain.Entities.LoanRequest", b =>
                {
                    b.HasOne("AbpLoanDemo.Loan.Domain.Entities.Guarantee", "Guarantee")
                        .WithMany()
                        .HasForeignKey("GuaranteeId");
                });
#pragma warning restore 612, 618
        }
    }
}
